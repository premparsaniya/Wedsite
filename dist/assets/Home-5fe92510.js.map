{"version":3,"file":"Home-5fe92510.js","sources":["../../src/pages/Home.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useContext } from \"react\";\nimport { SpinningLoader, PostCardsContent, Loading } from \"../components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { App_state, setPostList, LogoutUser, LogoutUserPost, /* setGetPostListToggle */ } from \"~/reduxState\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { AppContext, resetUser } from \"~/context\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [pageNo, setPageNo] = useState<number>(1);\n  \n  const [loading, setLoading] = useState<boolean>(false);\n\n  const { dispatch: disp } = useContext(AppContext);\n  const { user } = useSelector((state: App_state) => state?.UserLogin);\n  const postData = useSelector((s: App_state) => s?.PostListReducer);\n  // const postListToggle = useSelector((s: App_state) => s?.GetPostListToggleReducer);\n\n  const [hasNextPage, setHasNextPage] = useState(false);\n\n  const [mainLoading, setMainLoading] = useState<boolean>(false);\n\n  const limit = 10;\n\n  const token = user?.token;\n  // const [postDetailPath, setPostDetailPath] = useState<string>(\"\")\n\n  useEffect(() => {\n    /* (!postListToggle) && */ getPostList();\n  }, [/* updateLike , */ pageNo]);\n\n  const getPostList = () => {\n    pageNo === 1 && setMainLoading(true);\n    setLoading(true);\n\n    const postdataObj = {\n      method: \"get_post_list\",\n      page: pageNo,\n      limit: limit,\n      user_id: user.data.user_id,\n    };\n\n    fetch(`${import.meta.env.VITE_API_URL}post`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        version: \"1.0.0\",\n        token: `Bearer ${token}`,\n      },\n      body: JSON.stringify(postdataObj),\n    })\n      .then((result) => {\n        result\n          .json()\n          .then((response) => {\n            if (response.status === 1) {\n              setMainLoading(false);\n              let pLimit = limit;\n              let pData = response?.data?.length;\n              setHasNextPage(pData >= pLimit);\n              if (pageNo === 1) {\n                dispatch(setPostList(response?.data));\n              } else {\n                let clone = [...postData];\n                response?.data && clone.push(...response?.data);\n                dispatch(setPostList(clone));\n                // dispatch(setGetPostListToggle(true))\n              }\n            }\n            if (response.status === 2) {\n              toast.error(\"Your session is expired. Please login to access your account\", {\n                position: \"top-center\",\n              });\n              dispatch(LogoutUser());\n              dispatch(LogoutUserPost());\n              navigate(\"/\");\n              resetUser(disp);\n            }\n          })\n          .finally(() => setLoading(false));\n      })\n      .catch(() => {\n        console.log(\"error\");\n      });\n  };\n\n  const intObserver = useRef<any>();\n  const lastPostRef = useCallback(\n    (post: any) => {\n      if (loading) return;\n      if (intObserver.current) intObserver.current.disconnect();\n\n      intObserver.current = new IntersectionObserver((posts) => {\n        // dispatch(setGetPostListToggle(false))\n        if (posts[0].isIntersecting && hasNextPage) {\n          setPageNo((prev) => prev + 1);\n        }\n      });\n\n      if (post) intObserver.current.observe(post);\n    },\n    [loading, hasNextPage]\n  );\n\n  return (\n    <div className=\"home-main d-f\">\n      {mainLoading ? (\n        <div className=\"w-full h-[100%] flex justify-center items-center\">\n          <Loading />\n        </div>\n      ) : postData?.length > 0 ? (\n        postData?.map((val: any, index: number) => {\n          return postData?.length === index + 1 ? (\n            <PostCardsContent\n              key={index}\n              ref={lastPostRef}\n              index={index}\n              item={val}\n              getPostList={getPostList}\n            />\n          ) : (\n            <PostCardsContent\n              key={index}\n              index={index}\n              item={val}\n              getPostList={getPostList}\n            />\n          );\n        })\n      ) : (\n        !loading && (\n          <p className=\"flex items-center justify-center w-full text-xl text-center text-gray-500 h-52 text-bold\">\n            No Post yet !!\n          </p>\n        )\n      )}\n      {loading && !mainLoading && (\n        <SpinningLoader\n          isLoading\n          colClass=\"text-black\"\n          size={10}\n          className=\"flex items-center justify-center w-full mb-4\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["Home","dispatch","useDispatch","navigate","useNavigate","pageNo","setPageNo","useState","loading","setLoading","disp","useContext","AppContext","user","useSelector","state","postData","s","hasNextPage","setHasNextPage","mainLoading","setMainLoading","limit","token","useEffect","getPostList","postdataObj","result","response","pLimit","pData","_a","setPostList","clone","toast","LogoutUser","LogoutUserPost","resetUser","intObserver","useRef","lastPostRef","useCallback","post","posts","prev","jsxs","jsx","Loading","val","index","PostCardsContent","SpinningLoader"],"mappings":"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"}