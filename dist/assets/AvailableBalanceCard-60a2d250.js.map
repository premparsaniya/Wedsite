{"version":3,"file":"AvailableBalanceCard-60a2d250.js","sources":["../../src/components/TxtInput.tsx","../../src/components/AvailableBalanceCard.tsx"],"sourcesContent":["import { HTMLInputTypeAttribute, InputHTMLAttributes } from \"react\";\r\n\r\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\r\n    pHolder: string;\r\n    rIc?: JSX.Element;\r\n    rLabel?: string;\r\n    val: string;\r\n    onChangeT: (s: string) => void;\r\n    maxLength?: number;\r\n    props?: HTMLInputTypeAttribute;\r\n};\r\n\r\nconst TxtInput = ({ pHolder, rIc, rLabel, val, onChangeT, maxLength = 150, ...props}: Props) => {\r\n    return (\r\n        <div className=\"flex w-full flex-wrap items-stretch mb-3 max-w-md flex-row bg-neutral-100 focus:bg-neutral-200 rounded-lg overflow-hidden\">\r\n            <input placeholder={pHolder} value={val} onChange={(e) => onChangeT(e.target.value)} maxLength={maxLength} {...props}\r\n                className=\"px-3 py-3  flex-grow placeholder-neutral-400 text-black text-base border-0 outline-none focus:outline-non ring-0 pr-10 bg-transparent autofill:bg-transparent\"\r\n            />\r\n            <span className=\"font-normal text-center text-slate-700 bg-transparent text-base items-center justify-center pr-[2%] py-3\">\r\n                {rLabel}\r\n                {rIc}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TxtInput;","import { useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from \"~/context\";\r\nimport Web3 from \"web3\";\r\nimport { goerlyTestNetURL, mainNetURL, USDbalanceOfEth } from \"~/utils\";\r\nimport { getWallet, tokenValueFromWei } from \"~/functions\";\r\nconst { VITE_STATE_COIN_CONTRACT_ADDRESS, VITE_STATE_COIN_CONTRACT_ABI } = import.meta.env;\r\nimport { ethers } from \"ethers\";\r\n\r\nconst AvailableBalanceCard = () => {\r\n    const { state: { myWallet: { isMainNet, address, privateKey } } } = useContext(AppContext);\r\n    const { state: { myWallet }, dispatch } = useContext(AppContext);\r\n    const web3 = new Web3(isMainNet === true ? mainNetURL : goerlyTestNetURL);\r\n\r\n    const [stateEthVal, setStateEthVal] = useState<string>(\"0\");\r\n    const [stateEthUsdVal, setStateEthUsdVal] = useState<string>(\"0\");\r\n    const [stateBalance, setStateBalance] = useState<string>(\"0\");\r\n\r\n    useEffect(() => {\r\n        async function getStateBalance() {\r\n            const myContract = new web3.eth.Contract(JSON.parse(VITE_STATE_COIN_CONTRACT_ABI), VITE_STATE_COIN_CONTRACT_ADDRESS)\r\n            const balance = await myContract.methods.balanceOf(address).call();\r\n            setStateBalance(tokenValueFromWei(balance, \"18\"));\r\n        };\r\n\r\n        const getETHBalanceUSD = async () => {\r\n            await fetch(USDbalanceOfEth).then((res) => res.json()).then((res) => {\r\n                // console.log(\"resETHBalance:\", JSON.stringify(res, null, 2));\r\n                if (res?.status === \"1\") {\r\n                    // setStateEthUsdVal(res?.result?.ethusd || \"0\");\r\n                    getETHBalance(res?.result?.ethusd === \"\" ? \"0\" : res?.result?.ethusd || \"0\")\r\n                } else setStateEthUsdVal(\"0\");\r\n            }).catch(() => setStateEthUsdVal(\"0\"));\r\n        };\r\n\r\n        async function getETHBalance(usd: string) {\r\n            // get ETH Balance from web3 & ethers\r\n            const balance = await web3.eth.getBalance(address ?? \"\");\r\n            const balanceETH = ethers.utils.formatEther(balance);\r\n            setStateEthVal(balanceETH);\r\n            let toUSD = Number(balanceETH === \"\" ? \"0\" : balanceETH || \"0\") * Number(usd);\r\n            setStateEthUsdVal(toUSD.toFixed(2)); // console.log(\"balanceETH:\", balanceETH);\r\n        };\r\n        if ((privateKey === null) || (address === null)) getWallet({ myWallet, dispatch })\r\n        else { isMainNet && getStateBalance(); getETHBalanceUSD(); };\r\n    }, [address, isMainNet]);\r\n\r\n    return (\r\n        <div className=\"bg-black border border-gray-200 shadow-md rounded-xl max-w-lg w-full p-3.5\">\r\n            <span className=\"mb-2 text-lg text-center text-white font-lato\">Available Balance: </span>\r\n            <span className=\"mb-2 text-lg font-semibold text-center text-white font-lato\">$ {stateEthUsdVal}</span>\r\n            <section className=\"flex flex-col justify-center\">\r\n                <div className=\"flex flex-row my-2 text-2xl font-normal text-white font-lato\">\r\n                    {\"STATE \"}\r\n                    <h3 className=\"mx-3 text-2xl font-bold text-white font-lato\">{stateBalance}</h3>\r\n                </div>\r\n                <div className=\"flex flex-row text-2xl font-normal text-white font-lato\">\r\n                    {\"ETH \"}\r\n                    <h3 className=\"mx-3 text-2xl font-bold text-white font-lato\">{stateEthVal}</h3>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AvailableBalanceCard;"],"names":["TxtInput","pHolder","rIc","rLabel","val","onChangeT","maxLength","props","jsxs","jsx","e","VITE_STATE_COIN_CONTRACT_ADDRESS","VITE_STATE_COIN_CONTRACT_ABI","AvailableBalanceCard","isMainNet","address","privateKey","useContext","AppContext","myWallet","dispatch","web3","Web3","mainNetURL","goerlyTestNetURL","stateEthVal","setStateEthVal","useState","stateEthUsdVal","setStateEthUsdVal","stateBalance","setStateBalance","useEffect","getStateBalance","balance","tokenValueFromWei","getETHBalanceUSD","USDbalanceOfEth","res","getETHBalance","_a","_b","usd","balanceETH","ethers.utils.formatEther","toUSD","getWallet"],"mappings":"oOAYA,MAAMA,EAAW,CAAC,CAAE,QAAAC,EAAS,IAAAC,EAAK,OAAAC,EAAQ,IAAAC,EAAK,UAAAC,EAAW,UAAAC,EAAY,IAAK,GAAGC,CAAA,IAEtEC,EAAC,MAAI,CAAA,UAAU,4HACX,SAAA,CAAAC,EAAC,QAAA,CAAM,YAAaR,EAAS,MAAOG,EAAK,SAAWM,GAAML,EAAUK,EAAE,OAAO,KAAK,EAAG,UAAAJ,EAAuB,GAAGC,EAC3G,UAAU,+JAAA,CACd,EACAC,EAAC,OAAK,CAAA,UAAU,2GACX,SAAA,CAAAL,EACAD,CAAA,EACL,CACJ,CAAA,CAAA,ECjBF,CAAE,iCAAAS,EAAkC,6BAAAC,GAAiC,giWAGrEC,EAAuB,IAAM,CAC/B,KAAM,CAAE,MAAO,CAAE,SAAU,CAAE,UAAAC,EAAW,QAAAC,EAAS,WAAAC,EAAa,CAAA,EAAMC,EAAA,WAAWC,CAAU,EACnF,CAAE,MAAO,CAAE,SAAAC,CAAA,EAAY,SAAAC,GAAaH,EAAAA,WAAWC,CAAU,EACzDG,EAAO,IAAIC,EAAKR,IAAc,GAAOS,EAAaC,CAAgB,EAElE,CAACC,EAAaC,CAAc,EAAIC,WAAiB,GAAG,EACpD,CAACC,EAAgBC,CAAiB,EAAIF,WAAiB,GAAG,EAC1D,CAACG,EAAcC,CAAe,EAAIJ,WAAiB,GAAG,EAE5DK,OAAAA,EAAAA,UAAU,IAAM,CACZ,eAAeC,GAAkB,CAE7B,MAAMC,EAAU,MADG,IAAIb,EAAK,IAAI,SAAS,KAAK,MAAMT,CAA4B,EAAGD,CAAgC,EAClF,QAAQ,UAAUI,CAAO,EAAE,OAC5CgB,EAAAI,EAAkBD,EAAS,IAAI,CAAC,CACpD,CAEA,MAAME,EAAmB,SAAY,CACjC,MAAM,MAAMC,CAAe,EAAE,KAAMC,GAAQA,EAAI,KAAM,CAAA,EAAE,KAAMA,GAAQ,UAE7DA,GAAA,YAAAA,EAAK,UAAW,IAEFC,IAAAC,EAAAF,GAAA,YAAAA,EAAK,SAAL,YAAAE,EAAa,UAAW,GAAK,MAAMC,EAAAH,GAAA,YAAAA,EAAK,SAAL,YAAAG,EAAa,SAAU,GAAG,EACxEZ,EAAkB,GAAG,CAC/B,CAAA,EAAE,MAAM,IAAMA,EAAkB,GAAG,CAAC,CAAA,EAGzC,eAAeU,EAAcG,EAAa,CAEtC,MAAMR,EAAU,MAAMb,EAAK,IAAI,WAAWN,GAAW,EAAE,EACjD4B,EAAaC,EAAyBV,CAAO,EACnDR,EAAeiB,CAAU,EACrB,IAAAE,EAAQ,OAAOF,IAAe,GAAK,IAAMA,GAAc,GAAG,EAAI,OAAOD,CAAG,EAC1Db,EAAAgB,EAAM,QAAQ,CAAC,CAAC,CACtC,CACK7B,IAAe,MAAUD,IAAY,KAAiB+B,EAAA,CAAE,SAAA3B,EAAU,SAAAC,CAAA,CAAU,GAC1EN,GAAamB,EAAgB,EAAoBG,IAAI,EAC7D,CAACrB,EAASD,CAAS,CAAC,EAGnBN,EAAC,MAAI,CAAA,UAAU,6EACX,SAAA,CAACC,EAAA,OAAA,CAAK,UAAU,gDAAgD,SAAmB,sBAAA,EACnFD,EAAC,OAAK,CAAA,UAAU,8DAA8D,SAAA,CAAA,KAAGoB,CAAA,EAAe,EAChGpB,EAAC,UAAQ,CAAA,UAAU,+BACf,SAAA,CAACA,EAAA,MAAA,CAAI,UAAU,+DACV,SAAA,CAAA,SACAC,EAAA,KAAA,CAAG,UAAU,+CAAgD,SAAaqB,EAAA,CAAA,EAC/E,EACAtB,EAAC,MAAI,CAAA,UAAU,0DACV,SAAA,CAAA,OACAC,EAAA,KAAA,CAAG,UAAU,+CAAgD,SAAYgB,EAAA,CAAA,EAC9E,CAAA,EACJ,CACJ,CAAA,CAAA,CAER"}