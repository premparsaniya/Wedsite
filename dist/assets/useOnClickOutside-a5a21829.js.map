{"version":3,"file":"useOnClickOutside-a5a21829.js","sources":["../../src/hooks/useEventListener.ts","../../src/hooks/useIsomorphicLayoutEffect.ts","../../src/hooks/useOnClickOutside.ts"],"sourcesContent":["import { RefObject, useEffect, useRef } from 'react';\r\nimport { useIsomorphicLayoutEffect } from '~/hooks';\r\n\r\n// MediaQueryList Event based useEventListener interface\r\nfunction useEventListener<K extends keyof MediaQueryListEventMap>(\r\n    eventName: K,\r\n    handler: (event: MediaQueryListEventMap[K]) => void,\r\n    element: RefObject<MediaQueryList>,\r\n    options?: boolean | AddEventListenerOptions,\r\n): void\r\n\r\n// Window Event based useEventListener interface\r\nfunction useEventListener<K extends keyof WindowEventMap>(\r\n    eventName: K,\r\n    handler: (event: WindowEventMap[K]) => void,\r\n    element?: undefined,\r\n    options?: boolean | AddEventListenerOptions,\r\n): void\r\n\r\n// Element Event based useEventListener interface\r\nfunction useEventListener<\r\n    K extends keyof HTMLElementEventMap,\r\n    T extends HTMLElement = HTMLDivElement,\r\n>(\r\n    eventName: K,\r\n    handler: (event: HTMLElementEventMap[K]) => void,\r\n    element: RefObject<T>,\r\n    options?: boolean | AddEventListenerOptions,\r\n): void\r\n\r\n// Document Event based useEventListener interface\r\nfunction useEventListener<K extends keyof DocumentEventMap>(\r\n    eventName: K,\r\n    handler: (event: DocumentEventMap[K]) => void,\r\n    element: RefObject<Document>,\r\n    options?: boolean | AddEventListenerOptions,\r\n): void\r\n\r\nfunction useEventListener<\r\n    KW extends keyof WindowEventMap,\r\n    KH extends keyof HTMLElementEventMap,\r\n    KM extends keyof MediaQueryListEventMap,\r\n    T extends HTMLElement | MediaQueryList | void = void,\r\n>(\r\n    eventName: KW | KH | KM,\r\n    handler: (\r\n        event:\r\n            | WindowEventMap[KW]\r\n            | HTMLElementEventMap[KH]\r\n            | MediaQueryListEventMap[KM]\r\n            | Event,\r\n    ) => void,\r\n    element?: RefObject<T>,\r\n    options?: boolean | AddEventListenerOptions,\r\n) {\r\n    // Create a ref that stores handler\r\n    const savedHandler = useRef(handler)\r\n\r\n    useIsomorphicLayoutEffect(() => {\r\n        savedHandler.current = handler\r\n    }, [handler])\r\n\r\n    useEffect(() => {\r\n        // Define the listening target\r\n        const targetElement: T | Window = element?.current ?? window\r\n\r\n        if (!(targetElement && targetElement.addEventListener)) return\r\n\r\n        // Create event listener that calls handler function stored in ref\r\n        const listener: typeof handler = event => savedHandler.current(event)\r\n\r\n        targetElement.addEventListener(eventName, listener, options)\r\n\r\n        // Remove event listener on cleanup\r\n        return () => {\r\n            targetElement.removeEventListener(eventName, listener, options)\r\n        }\r\n    }, [eventName, element, options])\r\n}\r\n\r\nexport default useEventListener;","import { useEffect, useLayoutEffect } from 'react';\r\n\r\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\r\n\r\nexport default useIsomorphicLayoutEffect;","import { RefObject } from 'react';\r\nimport { useEventListener } from '~/hooks'\r\n\r\n\r\ntype Handler = (event: MouseEvent) => void\r\n\r\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n    ref: RefObject<T>,\r\n    handler: Handler,\r\n    mouseEvent: 'mousedown' | 'mouseup' = 'mousedown',\r\n): void {\r\n    useEventListener(mouseEvent, event => {\r\n        const el = ref?.current\r\n\r\n        // Do nothing if clicking ref's element or descendent elements\r\n        if (!el || el.contains(event.target as Node)) {\r\n            return\r\n        }\r\n\r\n        handler(event)\r\n    })\r\n}\r\n\r\nexport default useOnClickOutside;"],"names":["useEventListener","eventName","handler","element","options","savedHandler","useRef","useIsomorphicLayoutEffect","useEffect","targetElement","listener","event","useLayoutEffect","useOnClickOutside","ref","mouseEvent","el"],"mappings":"8CAsCA,SAASA,EAMLC,EACAC,EAOAC,EACAC,EACF,CAEQ,MAAAC,EAAeC,SAAOJ,CAAO,EAEnCK,EAA0B,IAAM,CAC5BF,EAAa,QAAUH,CAAA,EACxB,CAACA,CAAO,CAAC,EAEZM,EAAAA,UAAU,IAAM,CAEN,MAAAC,GAA4BN,GAAA,YAAAA,EAAS,UAAW,OAElD,GAAA,EAAEM,GAAiBA,EAAc,kBAAmB,OAGxD,MAAMC,EAA2BC,GAASN,EAAa,QAAQM,CAAK,EAEtD,OAAAF,EAAA,iBAAiBR,EAAWS,EAAUN,CAAO,EAGpD,IAAM,CACKK,EAAA,oBAAoBR,EAAWS,EAAUN,CAAO,CAAA,CAEnE,EAAA,CAACH,EAAWE,EAASC,CAAO,CAAC,CACpC,CC5EA,MAAMG,EAA4B,OAAO,OAAW,IAAcK,EAAkB,gBAAAJ,EAAA,UCIpF,SAASK,EACLC,EACAZ,EACAa,EAAsC,YAClC,CACJf,EAAiBe,EAAqBJ,GAAA,CAClC,MAAMK,EAAKF,GAAA,YAAAA,EAAK,QAGZ,CAACE,GAAMA,EAAG,SAASL,EAAM,MAAc,GAI3CT,EAAQS,CAAK,CAAA,CAChB,CACL"}