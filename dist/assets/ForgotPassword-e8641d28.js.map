{"version":3,"file":"ForgotPassword-e8641d28.js","sources":["../../src/pages/ForgotPassword.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { BTN, DownBox } from '../components'\nimport { useNavigate } from 'react-router-dom';\nimport { BLACK_LOGO } from '../assets';\nimport MyLoading from '../components/MyLoading';\nimport { toast } from 'react-toastify';\n\nconst ForgotPassword = () => {\n\n    const [email, setEmail] = useState<string>(\"\")\n    const [error, setError] = useState<string>(\"\");\n    const [myLoading, setMyLoading] = useState<boolean>(false);\n\n    const navigate = useNavigate();\n    const forgot = () => {\n        setError(\"\");\n        const loginUserObj = {\n            method: \"forgot_password\",\n            email: email,\n        };\n        setMyLoading(true);\n        fetch(`${import.meta.env.VITE_API_URL}login`,\n            {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-type\": \"application/json\",\n                    version: \"1.0.0\",\n                    // token: `Bearer ${token}`,\n                    // 'Access-Control-Allow-Origin' : \"*\",\n                },\n                body: JSON.stringify(loginUserObj),\n            })\n            .then((result) => {\n                result.json().then((response) => {\n                    if (response.status === 1) {\n                        toast.success(\"OTP is sent to your email address.\", { position: \"top-center\", autoClose: 1000 });\n                        navigate(\"/VerifyOTP\", {\n                            state: {\n                                email: `${email}`,\n                                userId: `${response.data.user_id}`,\n                            },\n                        })\n                        // console.log(\"response\", response)\n                    } else {\n                        setError(response.message);\n                    }\n                    setMyLoading(false);\n                });\n            })\n            .catch(() => {\n                setError(\"Check your Network...\");\n            });\n    }\n    return (\n        <section className=\"login-main-sec\">\n            <div className=\"root-container\">\n                <div className=\"box-fp\">\n                    <div className=\"f-insta-logo\">\n                        <img src={BLACK_LOGO} className=\"logo-f\" alt=\"hh\"></img>\n                    </div>\n                    <div className=\"fp-heading-div \" >\n                        <span className=\"f-text-heading\">Forgot password</span>\n                        <span className=\"f-text\">Please enter your email address, You will receive to create new OTP via email.</span>\n                    </div>\n                    <div className=\"fp-input-div\">\n                        <input type=\"text\"\n                            placeholder='Enter email'\n                            className=\"u-inp\"\n                            value={email}\n                            onChange={(e) => { setEmail(e.target.value), setError(\"\") }}\n                        />\n                        <BTN\n                            className=\"px-30\"\n                            onP={forgot}\n                            loading={myLoading}\n                            title=\"Send OTP\"\n                            disabled={\n                                myLoading || (email !== \"\")\n                                    ? false\n                                    : true\n                            }\n                        />\n                    </div>\n                </div>\n                <div className=\"f-back\">\n                    <DownBox className={\"fp-under-box\"} page={'/login'} linkName={'Back To Login'} text={undefined} />\n                </div>\n                {error ? (\n                    <div className=\"fp-error-box\">\n                        <h1>{error}</h1>\n                    </div>\n                ) : null}\n            </div>\n        </section>\n    )\n}\n\nexport default ForgotPassword"],"names":["ForgotPassword","email","setEmail","useState","error","setError","myLoading","setMyLoading","navigate","useNavigate","jsxs","jsx","BLACK_LOGO","e","BTN","loginUserObj","result","response","toast","DownBox"],"mappings":"qQAOA,MAAMA,EAAiB,IAAM,CAEzB,KAAM,CAACC,EAAOC,CAAQ,EAAIC,WAAiB,EAAE,EACvC,CAACC,EAAOC,CAAQ,EAAIF,WAAiB,EAAE,EACvC,CAACG,EAAWC,CAAY,EAAIJ,WAAkB,EAAK,EAEnDK,EAAWC,IAyCjB,SACK,UAAQ,CAAA,UAAU,iBACf,SAACC,EAAA,MAAA,CAAI,UAAU,iBACX,SAAA,CAACA,EAAA,MAAA,CAAI,UAAU,SACX,SAAA,CAACC,EAAA,MAAA,CAAI,UAAU,eACX,SAACA,EAAA,MAAA,CAAI,IAAKC,EAAY,UAAU,SAAS,IAAI,IAAK,CAAA,EACtD,EACAF,EAAC,MAAI,CAAA,UAAU,kBACX,SAAA,CAACC,EAAA,OAAA,CAAK,UAAU,iBAAiB,SAAe,kBAAA,EAC/CA,EAAA,OAAA,CAAK,UAAU,SAAS,SAA8E,iFAAA,CAAA,EAC3G,EACAD,EAAC,MAAI,CAAA,UAAU,eACX,SAAA,CAAAC,EAAC,QAAA,CAAM,KAAK,OACR,YAAY,cACZ,UAAU,QACV,MAAOV,EACP,SAAWY,GAAM,CAAEX,EAASW,EAAE,OAAO,KAAK,EAAGR,EAAS,EAAE,CAAE,CAAA,CAC9D,EACAM,EAACG,EAAA,CACG,UAAU,QACV,IA5DT,IAAM,CACjBT,EAAS,EAAE,EACX,MAAMU,EAAe,CACjB,OAAQ,kBACR,MAAAd,CAAA,EAEJM,EAAa,EAAI,EACjB,MAAM,0CACF,CACI,OAAQ,OACR,QAAS,CACL,OAAQ,mBACR,eAAgB,mBAChB,QAAS,OAGb,EACA,KAAM,KAAK,UAAUQ,CAAY,CACrC,CAAA,EACC,KAAMC,GAAW,CACdA,EAAO,KAAK,EAAE,KAAMC,GAAa,CACzBA,EAAS,SAAW,GACpBC,EAAM,QAAQ,qCAAsC,CAAE,SAAU,aAAc,UAAW,IAAM,EAC/FV,EAAS,aAAc,CACnB,MAAO,CACH,MAAO,GAAGP,IACV,OAAQ,GAAGgB,EAAS,KAAK,SAC7B,CAAA,CACH,GAGDZ,EAASY,EAAS,OAAO,EAE7BV,EAAa,EAAK,CAAA,CACrB,CAAA,CACJ,EACA,MAAM,IAAM,CACTF,EAAS,uBAAuB,CAAA,CACnC,CAAA,EAuBe,QAASC,EACT,MAAM,WACN,SACI,EAAAA,GAAcL,IAAU,GAElB,CAEd,CAAA,EACJ,CAAA,EACJ,EACCU,EAAA,MAAA,CAAI,UAAU,SACX,WAACQ,EAAQ,CAAA,UAAW,eAAgB,KAAM,SAAU,SAAU,gBAAiB,KAAM,MAAW,CAAA,EACpG,EACCf,IACI,MAAI,CAAA,UAAU,eACX,SAACO,EAAA,KAAA,CAAI,SAAMP,CAAA,CAAA,CAAA,CACf,EACA,IAAA,CACR,CAAA,CACJ,CAAA,CAER"}