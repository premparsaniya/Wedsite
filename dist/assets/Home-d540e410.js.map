{"version":3,"file":"Home-d540e410.js","sources":["../../src/pages/Home.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useContext } from \"react\";\r\nimport { SpinningLoader, PostCardsContent, Loading } from \"../components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { App_state, setPostList, LogoutUser, LogoutUserPost, /* setGetPostListToggle */ } from \"~/reduxState\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AppContext, resetUser } from \"~/context\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [pageNo, setPageNo] = useState<number>(1);\r\n  \r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const { dispatch: disp } = useContext(AppContext);\r\n  const { user } = useSelector((state: App_state) => state?.UserLogin);\r\n  const postData = useSelector((s: App_state) => s?.PostListReducer);\r\n  // const postListToggle = useSelector((s: App_state) => s?.GetPostListToggleReducer);\r\n\r\n  const [hasNextPage, setHasNextPage] = useState(false);\r\n\r\n  const [mainLoading, setMainLoading] = useState<boolean>(false);\r\n\r\n  const limit = 10;\r\n\r\n  const token = user?.token;\r\n  // const [postDetailPath, setPostDetailPath] = useState<string>(\"\")\r\n\r\n  useEffect(() => {\r\n    /* (!postListToggle) && */ getPostList();\r\n  }, [/* updateLike , */ pageNo]);\r\n\r\n  const getPostList = () => {\r\n    pageNo === 1 && setMainLoading(true);\r\n    setLoading(true);\r\n\r\n    const postdataObj = {\r\n      method: \"get_post_list\",\r\n      page: pageNo,\r\n      limit: limit,\r\n      user_id: user.data.user_id,\r\n    };\r\n\r\n    fetch(`${import.meta.env.VITE_PUBLIC_URL}post`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        version: \"1.0.0\",\r\n        token: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(postdataObj),\r\n    })\r\n      .then((result) => {\r\n        result\r\n          .json()\r\n          .then((response) => {\r\n            if (response.status === 1) {\r\n              setMainLoading(false);\r\n              let pLimit = limit;\r\n              let pData = response?.data?.length;\r\n              setHasNextPage(pData >= pLimit);\r\n              if (pageNo === 1) {\r\n                dispatch(setPostList(response?.data));\r\n              } else {\r\n                let clone = [...postData];\r\n                response?.data && clone.push(...response?.data);\r\n                dispatch(setPostList(clone));\r\n                // dispatch(setGetPostListToggle(true))\r\n              }\r\n            }\r\n            if (response.status === 2) {\r\n              toast.error(\"Your session is expired. Please login to access your account\", {\r\n                position: \"top-center\",\r\n              });\r\n              dispatch(LogoutUser());\r\n              dispatch(LogoutUserPost());\r\n              navigate(\"/\");\r\n              resetUser(disp);\r\n            }\r\n          })\r\n          .finally(() => setLoading(false));\r\n      })\r\n      .catch(() => {\r\n        console.log(\"error\");\r\n      });\r\n  };\r\n\r\n  const intObserver = useRef<any>();\r\n  const lastPostRef = useCallback(\r\n    (post: any) => {\r\n      if (loading) return;\r\n      if (intObserver.current) intObserver.current.disconnect();\r\n\r\n      intObserver.current = new IntersectionObserver((posts) => {\r\n        // dispatch(setGetPostListToggle(false))\r\n        if (posts[0].isIntersecting && hasNextPage) {\r\n          setPageNo((prev) => prev + 1);\r\n        }\r\n      });\r\n\r\n      if (post) intObserver.current.observe(post);\r\n    },\r\n    [loading, hasNextPage]\r\n  );\r\n\r\n  return (\r\n    <div className=\"home-main d-f\">\r\n      {mainLoading ? (\r\n        <div className=\"w-full h-[100%] flex justify-center items-center\">\r\n          <Loading />\r\n        </div>\r\n      ) : postData?.length > 0 ? (\r\n        postData?.map((val: any, index: number) => {\r\n          return postData?.length === index + 1 ? (\r\n            <PostCardsContent\r\n              key={index}\r\n              ref={lastPostRef}\r\n              index={index}\r\n              item={val}\r\n              getPostList={getPostList}\r\n            />\r\n          ) : (\r\n            <PostCardsContent\r\n              key={index}\r\n              index={index}\r\n              item={val}\r\n              getPostList={getPostList}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        !loading && (\r\n          <p className=\"flex items-center justify-center w-full text-xl text-center text-gray-500 h-52 text-bold\">\r\n            No Post yet !!\r\n          </p>\r\n        )\r\n      )}\r\n      {loading && !mainLoading && (\r\n        <SpinningLoader\r\n          isLoading\r\n          colClass=\"text-black\"\r\n          size={10}\r\n          className=\"flex items-center justify-center w-full mb-4\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["Home","dispatch","useDispatch","navigate","useNavigate","pageNo","setPageNo","useState","loading","setLoading","disp","useContext","AppContext","user","useSelector","state","postData","s","hasNextPage","setHasNextPage","mainLoading","setMainLoading","limit","token","useEffect","getPostList","postdataObj","result","response","pLimit","pData","_a","setPostList","clone","toast","LogoutUser","LogoutUserPost","resetUser","intObserver","useRef","lastPostRef","useCallback","post","posts","prev","jsxs","jsx","Loading","val","index","PostCardsContent","SpinningLoader"],"mappings":"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"}