{"version":3,"file":"SendSTATE-d1809e52.js","sources":["../../src/pages/Wallet/SendSTATE.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react'\r\nimport { AvailableBalanceCard, BTN, Modal, TxtInput } from '~/components';\r\nimport { goerlyTestNetURL, mainNetURL } from '~/utils';\r\nimport { tokenValueFromWei } from '~/functions';\r\nimport { toast } from 'react-toastify';\r\nimport { AppContext } from '~/context';\r\nimport Web3 from 'web3';\r\nconst { VITE_STATE_COIN_CONTRACT_ABI, VITE_STATE_COIN_CONTRACT_ADDRESS } = import.meta.env;\r\n\r\nconst SendSTATE = () => {\r\n    const { state: { myWallet: { isMainNet, address: myAddress, privateKey } } } = useContext(AppContext);\r\n    const web3 = new Web3(isMainNet === true ? mainNetURL : goerlyTestNetURL);\r\n    const [address, setAddress] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [showConform, setShowConform] = useState(false);\r\n    const [gasFeesVal, setGasFeesVal] = useState(0.00);\r\n    const [nonce, setNonce] = useState<number | undefined>();\r\n    const [gasPriceIs, setGasPriceIs] = useState(\"0\");\r\n\r\n    const onSend = async () => {\r\n        const myContract = new web3.eth.Contract(JSON.parse(VITE_STATE_COIN_CONTRACT_ABI), VITE_STATE_COIN_CONTRACT_ADDRESS)\r\n        const data = myContract.methods.transfer(address, tokenValueFromWei(amount, '18')).encodeABI();\r\n        let txObj = { from: myAddress || \"\", to: address, nonce, gas: 21000, gasPrice: gasPriceIs, data }\r\n        privateKey && myAddress && web3.eth.accounts.signTransaction(txObj, privateKey, (err, result) => {\r\n            if (err) { console.error(\"err:\", err); return; }\r\n            console.log(\"result\", result);\r\n            result?.rawTransaction ? web3.eth.sendSignedTransaction(result?.rawTransaction).then(({ transactionHash }) => {\r\n                console.log(\"transactionHash\", transactionHash);\r\n            }).catch((err) => { console.error(\"err:::\", err); }) : console.error(\":::_err_:::\", err);\r\n        });\r\n    }\r\n    function onConform() {\r\n        if (address?.trim()?.length === 0) { toast.error(\"Please enter address\", { position: \"top-center\", }); return; };\r\n        if (address?.trim()?.length !== 42) { toast.error(\"Please enter valid address\", { position: \"top-center\" }); return; };\r\n        if (amount?.trim()?.length === 0) { toast.error(\"Please enter amount\", { position: \"top-center\" }); return; };\r\n        if (Number(amount) <= 0) { toast.error(\"Please enter valid amount\", { position: \"top-center\" }); return; };\r\n        setShowConform(true);\r\n    };\r\n    function onClose() { setShowConform(false); };\r\n\r\n\r\n    useEffect(() => {\r\n        (privateKey || myAddress) === null ? null : (estimatedGasFees(), getNonce())\r\n    }, [myAddress]);\r\n\r\n    /* calclute gas fee of amount from web3 */\r\n    // web3.eth.getGasPrice().then(console.log);\r\n\r\n    async function getNonce() {\r\n        return myAddress ? await web3.eth.getTransactionCount(myAddress).then((result) => {\r\n            setNonce(result); console.log(\"nonce\", result);\r\n            return result;\r\n        }) : undefined;\r\n    };\r\n\r\n    async function estimatedGasFees() {\r\n        return await web3.eth.getGasPrice().then((result) => {\r\n            setGasPriceIs(result); // console.log(\"resultGASSS\", result);\r\n            let gasPrice = web3.utils.fromWei(result, 'ether');\r\n            let gasFees = parseFloat(gasPrice) * 21000;\r\n            console.log(\"gasFees::::\", gasFees);\r\n            setGasFeesVal(gasFees); console.log(\"gasFees\", gasFees);\r\n            return gasFees;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center min-h-screen py-20 bg-white min-w-screen px-3.5\">\r\n            <AvailableBalanceCard />\r\n            <span className=\"font-lato font-bold text-xl text-center text-black mx-[2%] mt-[2%] mb-2\">Please fill in the form below to send STATE</span>\r\n            <TxtInput\r\n                pHolder=\"Address\"\r\n                val={address}\r\n                onChangeT={setAddress}\r\n            />\r\n            <TxtInput\r\n                pHolder=\"Amount\"\r\n                val={amount}\r\n                onChangeT={t => {\r\n                    if (t === \"--\" || t === \"-\" || t === \"\") {\r\n                        setAmount(\"\"); return;\r\n                    } else {\r\n                        const num = parseFloat(t);\r\n                        if (num < 0) {\r\n                            setAmount(\"\"); return;\r\n                        }\r\n                        setAmount(t);\r\n                    }\r\n                }}\r\n                rLabel=\"STATE\"\r\n                type=\"number\"\r\n                min={0}\r\n            />\r\n            <BTN title=\"Send STATE\" className='mt-8 px-[7%] text-base' onP={onConform} />\r\n            <Modal visible={showConform} onClose={onClose} saveBtnTxt=\"Send\" onSave={onSend} title=\"Confirm Transaction\" subClass=\"w-[100%] mx-1 sm:mx-10 \">\r\n                <div className=\"flex justify-between border-t-[1px] border-gray-300 px-4 pt-2\">\r\n                    <span className=\"text-sm text-gray-600 md:text-base\">Amount</span>\r\n                    <span className={`block text-[14px] md:text-lg font-lato`}>{amount}</span>\r\n                </div>\r\n                <div className=\"flex justify-between px-4 pt-2 border-gray-300\">\r\n                    <span className=\"text-sm text-gray-600 md:text-base Estimated gas fee\">Estimated gas fee</span>\r\n                    <span className={`block text-[14px] md:text-lg font-lato`}>{gasFeesVal.toFixed(12)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between px-4 pt-4 border-t-[1px] border-black mt-4\">\r\n                    <span className=\"text-sm text-agray-600 md:text-base\">Total</span>\r\n                    <span className={`block text-[14px] md:text-lg font-lato`}>{(parseFloat(amount) + gasFeesVal).toFixed(12)}</span>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SendSTATE;"],"names":["VITE_STATE_COIN_CONTRACT_ABI","VITE_STATE_COIN_CONTRACT_ADDRESS","SendSTATE","isMainNet","myAddress","privateKey","useContext","AppContext","web3","Web3","mainNetURL","goerlyTestNetURL","address","setAddress","useState","amount","setAmount","showConform","setShowConform","gasFeesVal","setGasFeesVal","nonce","setNonce","gasPriceIs","setGasPriceIs","onSend","data","tokenValueFromWei","txObj","err","result","transactionHash","onConform","_a","toast","_b","_c","onClose","useEffect","estimatedGasFees","getNonce","gasPrice","gasFees","jsxs","jsx","AvailableBalanceCard","TxtInput","t","BTN","Modal"],"mappings":"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"}