{"version":3,"file":"History-34cd4608.js","sources":["../../src/assets/svg/receive_icon.svg","../../src/assets/svg/sent_icon.svg","../../src/pages/Wallet/History.tsx"],"sourcesContent":["export default \"__VITE_ASSET__123770ca__\"","export default \"__VITE_ASSET__d48c19df__\"","import { useContext, useEffect, useState } from 'react';\r\nimport { getHistory, getTransactionStatus, getWallet, onCopy, tokValFromWeiFormated, openUrl } from '~/functions';\r\nimport { Modal, SpinningLoader } from '~/components';\r\nimport { RECEIVE_ICON, SENT_ICON } from '~/assets';\r\nimport { AppContext } from '~/context';\r\nimport moment from 'moment';\r\nimport Web3 from 'web3';\r\n\r\nconst History = () => {\r\n    const { state: { myWallet }, dispatch } = useContext(AppContext);\r\n    const { address, isMainNet, privateKey } = myWallet;\r\n    const [data, setData] = useState<unknown[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n    const [visible, setVisible] = useState(false);\r\n    const onClose = () => setVisible(false);\r\n    const [selectedItm, setSelectedItm] = useState<any>({});\r\n\r\n    useEffect(() => {\r\n        (privateKey || address) === null ? getWallet({ myWallet, dispatch }) : onGetHistory();\r\n    }, [address]);\r\n\r\n    const onGetHistory = async () => {\r\n        address && getHistory({ wAddress: /* \"0x5702f62c9af9af38d10c3f058f7dee1cedfd6352\" */address, pg: 1, offset: 1000, isMainNet }).then(({ data, err }) => {\r\n            if (err === null && data?.status === \"1\") {\r\n                setData(data?.result || []); //console.log(\"HistoryData\", JSON.stringify(data, null, 3));\r\n            } else { console.error(err); }\r\n        }).catch(err => console.error(err)).finally(() => setLoading(false));\r\n    };\r\n\r\n    const getStateTxtCol = (st: string) => {\r\n        if (st === \"Confirmed\") return \"text-green-400\"\r\n        else if (st === \"Failed\") return \"text-rose-500\"\r\n        else if (st === \"Pending\") return \"text-lime-300\"\r\n        else return \"text-black\"\r\n    };\r\n\r\n    const getStatus = (st: string) => {\r\n        if (st === \"1\") return \"Confirmed\";\r\n        else if (st === \"0\") return \"Failed\";\r\n        else if (st === \"\" || st === null) return \"Pending\";\r\n        else return \"Unknown\"\r\n    };\r\n\r\n    const onTranstion = (item: any) => {\r\n        setSelectedItm(item); setVisible(true);\r\n        if (isMainNet) {\r\n            getTransactionStatus(item?.hash, isMainNet).then(({ data, err }) => {\r\n                if (err === null && data?.status === \"1\") {\r\n                    const _data = data?.result || { status: \"\" };\r\n                    // console.log(\"TransactionStatus\", JSON.stringify(_data, null, 3));\r\n                    setSelectedItm({ ...item, ..._data });\r\n                } else { console.error(err); }\r\n            }).catch(err => console.error(err));\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center flex-1 min-h-screen py-16 min-w-screen\">\r\n            <span className=\"block text-4xl font-semibold text-center text-black font-lato\">History</span>\r\n            {loading ? /* <span className=\"block text-2xl font-semibold text-center text-black font-lato mt-[15%]\">Loading...</span> */\r\n                <SpinningLoader isLoading colClass=\"text-black\" size={10} className=\"mt-[15%]\" /> : (\r\n                    data?.length === 0 ? <span className=\"block text-lg font-semibold text-center text-black font-lato mt-[15%]\">No NFTs found!</span> : (\r\n                        data?.map((item: any, index) => {\r\n                            const _title = `${item?.from === address ? \"Sent\" : \"Received\"} ${isMainNet ? item?.tokenSymbol : \"ETH\"}`;\r\n                            return (\r\n                                <button onClick={() => onTranstion({ ...item, _title })} key={index} className={\r\n                                    `flex flex-row items-center justify-center w-[100%] sm:w-[92%] lg:max-w-[70%] p-1 md:p-4 mx-[4%] ${data?.length - 1 === index ? \"\" : \"border-b-2 border-zinc-100\"}`\r\n                                }>\r\n                                    <img src={\r\n                                        item?.from === address ? SENT_ICON : RECEIVE_ICON\r\n                                    } alt=\"NFT\" className=\"min-w-[50px] h-[50px]\" />\r\n                                    <div className=\"flex flex-col justify-between w-[100%] px-4 min-h-[60px]\">\r\n                                        <div className=\"flex flex-row items-center justify-between w-[100%]\">\r\n                                            <span className=\"block text-[14px] font-semibold text-black lg:text-xl font-lato\">{isMainNet ? item?.tokenSymbol ? _title : '--' : _title}</span>\r\n                                            <span className=\"block text-[14px] font-semibold text-black md:text-xl font-lato\">{item?.value ? `${myWallet?.isMainNet ? tokValFromWeiFormated(item?.value, item?.tokenDecimal) : Web3.utils.fromWei(item?.value,/*kether mether gether */ \"ether\")} ${isMainNet ? item?.tokenSymbol : \"ETH\"}` : '--'}</span>\r\n                                        </div>\r\n                                        <div className=\"flex flex-row items-center justify-between w-[100%]\">\r\n                                            <span key={index}\r\n                                                className={`block text-[14px] md:text-lg font-lato ${getStateTxtCol(getStatus(isMainNet ? item?.status : item?.txreceipt_status))}`}>{\r\n                                                    isMainNet ? item?.status ? `${getStatus(item?.status)} ` : '--' : item?.txreceipt_status ? `${getStatus(item?.txreceipt_status)} ` : '--'\r\n                                                }</span>\r\n                                            <span className=\"block text-[14px] md:text-lg text-zinc-700 font-lato\">{item?.timeStamp ? moment.unix(item?.timeStamp).fromNow() : \"--\"}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </button>\r\n                            )\r\n                        })\r\n                    )\r\n                )\r\n            }\r\n\r\n            <Modal visible={visible} onClose={onClose} hideClose saveBtnTxt=\"Close\" onSave={onClose} title={selectedItm?._title} subClass=\"w-[100%] mx-1 sm:mx-10 \">\r\n                <div className=\"flex justify-between border-t-[1px] border-gray-300 px-4 pt-4\">\r\n                    <span className=\"text-sm text-gray-600 md:text-base\">Status</span>\r\n                    <span className=\"text-sm text-gray-600 md:text-base\">Date</span>\r\n                </div>\r\n                <div className=\"flex justify-between px-4 pt-2\">\r\n                    <span className={`block text-[14px] md:text-lg font-lato ${getStateTxtCol(getStatus(isMainNet ? selectedItm?.status : selectedItm?.txreceipt_status))}`}>{\r\n                        isMainNet ? selectedItm?.status ? `${getStatus(selectedItm?.status)} ` : '--' : selectedItm?.txreceipt_status ? `${getStatus(selectedItm?.txreceipt_status)} ` : '--'\r\n                    }</span>\r\n                    <span className=\"block text-[14px] md:text-lg font-lato text-black\">{selectedItm?.timeStamp ? moment.unix(selectedItm?.timeStamp).format(\"MMM DD YYYY [at] hh:mm A\") : \"--\"}</span>\r\n                </div>\r\n                <div className=\"flex justify-between px-4 pt-4 border-t-[1px] border-black mt-4\">\r\n                    <span className=\"text-sm text-gray-600 md:text-base\">From</span>\r\n                    <span className=\"text-sm text-gray-600 md:text-base\">To</span>\r\n                </div>\r\n                <div className=\"flex justify-between px-4\">\r\n                    <span\r\n                        className=\"block text-[14px] md:text-lg font-lato text-black break-all mr-[3%] text-left select-none cursor-copy\"\r\n                        onClick={() => onCopy(selectedItm?.from)}\r\n                    >{selectedItm?.from ? selectedItm?.from : '--'}</span>\r\n                    <span\r\n                        className=\"block text-[14px] md:text-lg font-lato text-black break-all ml-[3%] text-right select-none cursor-copy\"\r\n                        onClick={() => onCopy(selectedItm?.to)}\r\n                    >{selectedItm?.to ? selectedItm?.to : '--'}</span>\r\n                </div>\r\n                <div className=\"flex justify-between px-4 pt-4 border-t-[1px] border-black mt-4\">\r\n                    <span className=\"text-sm text-agray-600 md:text-base\">NONCE</span>\r\n                </div>\r\n                <div className=\"flex justify-between px-4\">\r\n                    <span className=\"block text-[14px] md:text-lg font-lato text-black break-all\">{selectedItm?.nonce || '--'}</span>\r\n                </div>\r\n                <div className='self-center'>\r\n                    <button className=\"transparent-secondary-btn\" onClick={() => {\r\n                        openUrl(`https://${myWallet?.isMainNet ? 'etherscan.io' : 'ropsten.etherscan.io'}/tx/${selectedItm?.hash}`)\r\n                    }}>View on EtherScan</button>\r\n                </div>\r\n                <div className=\"flex justify-between p-3 mt-5 border-2 border-black rounded-xl\">\r\n                    <span className=\"block text-[14px] md:text-lg font-lato text-black break-all\">Amount</span>\r\n                    <span className=\"block text-[14px] md:text-lg font-lato text-black break-all\">{\r\n                        selectedItm?.value ? `${myWallet?.isMainNet ? tokValFromWeiFormated(selectedItm?.value, selectedItm?.tokenDecimal) : Web3.utils.fromWei(selectedItm?.value, \"ether\")} ${isMainNet ? selectedItm?.tokenSymbol : \"ETH\"}` : '--'\r\n                    }</span>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default History;"],"names":["RECEIVE_ICON","SENT_ICON","History","myWallet","dispatch","useContext","AppContext","address","isMainNet","privateKey","data","setData","useState","loading","setLoading","visible","setVisible","onClose","selectedItm","setSelectedItm","useEffect","getWallet","onGetHistory","getHistory","err","getStateTxtCol","st","getStatus","onTranstion","item","getTransactionStatus","_data","jsxs","jsx","SpinningLoader","index","_title","tokValFromWeiFormated","Web3","moment","Modal","onCopy","openUrl"],"mappings":"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"}