{"version":3,"file":"SaveBookMark-5bd0adb8.js","sources":["../../src/pages/SaveBookMark.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Loading, SaveBookMarkContent, SpinningLoader } from \"../components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { App_state, setPostList } from \"~/reduxState\";\r\nimport { BACK_ICON, EMPTY_ICON } from \"~/assets\";\r\nconst SaveBookMark = () => {\r\n  const { user } = useSelector((state: any) => state.UserLogin);\r\n  const postData = useSelector((s: App_state) => s?.PostListReducer);\r\n\r\n  const token = user?.token;\r\n  const limit = 10;\r\n\r\n  const [hasNextPage, setHasNextPage] = useState(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [listLoading, setListLoading] = useState<boolean>(false);\r\n  const [pageNo, setPageNo] = useState<number>(1);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleBackArrow = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  // const [bPost, setBPost] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    getBookMarkList();\r\n  }, [pageNo]);\r\n\r\n  const getBookMarkList = () => {\r\n    pageNo === 1 && setLoading(true);\r\n    setListLoading(true);\r\n    const obj = {\r\n      method: \"get_post_list\",\r\n      user_id: user.data.user_id,\r\n      page: pageNo,\r\n      limit: limit,\r\n      filter_by: {\r\n        bookmark: 1,\r\n      },\r\n    };\r\n    fetch(`${import.meta.env.VITE_PUBLIC_URL}post`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        contentType: \"application/json\",\r\n        version: \"1.0.0\",\r\n        token: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(obj),\r\n    }).then((res) => {\r\n      res.json().then((response) => {\r\n        console.log(\"bm --->\", response);\r\n        if (response.status === 1) {\r\n          setLoading(false);\r\n          let pLimit = limit;\r\n          let pData = response?.data?.length;\r\n          setHasNextPage(pData >= pLimit);\r\n          if (pageNo === 1) {\r\n            dispatch(setPostList(response?.data));\r\n          } else {\r\n            let clone = [...postData];\r\n            response?.data && clone.push(...response?.data);\r\n            dispatch(setPostList(clone));\r\n          }\r\n          // console.log(\"save ----->\", response)\r\n        } else {\r\n          // console.log(\"else\", response);\r\n        }\r\n      });\r\n    }).finally(() => setListLoading(false));\r\n  };\r\n\r\n  const intObserver = useRef<any>();\r\n  const lastPostRef = useCallback(\r\n    (post: any) => {\r\n      if (listLoading) return;\r\n      if (intObserver.current) intObserver.current.disconnect();\r\n\r\n      intObserver.current = new IntersectionObserver((posts) => {        \r\n        if (posts[0].isIntersecting && hasNextPage) {\r\n          setPageNo((prev) => prev + 1);\r\n        }\r\n      });\r\n      if (post) intObserver.current.observe(post);\r\n    },\r\n    [listLoading, hasNextPage]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sb-header-div\">\r\n        <img\r\n          src={BACK_ICON}\r\n          alt=\"back\"\r\n          className=\"back-arrow\"\r\n          onClick={handleBackArrow}\r\n        />\r\n        <span className=\"page-title-span\">Save Bookmark</span>\r\n      </div>\r\n      {loading ? (\r\n        <div className=\"w-full h-[50vh] flex justify-center items-center\">\r\n          <Loading size={100} />\r\n        </div>\r\n      ) : postData?.length === 0 ? (\r\n        <>\r\n          {\" \"}\r\n          <div className=\"no-video-div\">\r\n            <img src={EMPTY_ICON} alt=\"EMpty\" className=\"no-video-icon\" />\r\n            <span className=\"no-video-span\">No Videos</span>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"sb-content-div\">\r\n            {postData?.length > 0\r\n              ? postData.map((item: any, index: number) => {\r\n                return postData?.length === index + 1 ? (\r\n                  <SaveBookMarkContent\r\n                    key={index}\r\n                    index={index}\r\n                    item={item}\r\n                    ref={lastPostRef}\r\n                    getBookMarkList={getBookMarkList}\r\n                  />\r\n                ) : (\r\n                  <SaveBookMarkContent\r\n                    key={index}\r\n                    index={index}\r\n                    item={item}\r\n                    getBookMarkList={getBookMarkList}\r\n                  />\r\n                );\r\n              })\r\n              : !listLoading && <p>No users yet !!</p>}\r\n            {listLoading && (\r\n              <SpinningLoader\r\n                isLoading\r\n                colClass=\"text-black\"\r\n                size={10}\r\n                className=\"mb-4 w-full flex justify-center items-center\"\r\n              />\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SaveBookMark;\r\n"],"names":["SaveBookMark","user","useSelector","state","postData","s","token","limit","hasNextPage","setHasNextPage","useState","loading","setLoading","listLoading","setListLoading","pageNo","setPageNo","navigate","useNavigate","dispatch","useDispatch","handleBackArrow","useEffect","getBookMarkList","obj","res","response","pLimit","pData","_a","setPostList","clone","intObserver","useRef","lastPostRef","useCallback","post","posts","prev","jsxs","Fragment","jsx","BACK_ICON","Loading","EMPTY_ICON","item","index","SaveBookMarkContent","SpinningLoader"],"mappings":"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"}